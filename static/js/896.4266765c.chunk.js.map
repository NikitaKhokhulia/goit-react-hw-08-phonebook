{"version":3,"file":"static/js/896.4266765c.chunk.js","mappings":"sOACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA+F,6B,SCGlFA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,kBAAMC,UAAWC,EAAUC,SAhBR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAU,CACdC,KAAMH,EAAEI,cAAcD,KAAKE,MAC3BC,OAAQN,EAAEI,cAAcE,OAAOD,OAGjC,GAAgB,KAAZH,EAGF,OAFAP,GAASY,EAAAA,EAAAA,IAAWL,SACpBF,EAAEI,cAAcI,QAGlBC,MAAM,yCACP,EAGC,WACE,qCAEE,kBACEZ,UAAWC,EACXY,KAAK,OACLP,KAAK,OACLQ,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,uCAEE,kBACEhB,UAAWC,EACXY,KAAK,MACLP,KAAK,SACLQ,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQH,KAAK,SAASb,UAAWC,EAAjC,2BAKL,ECjDYgB,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEzBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,ECLtC,EAAuB,0BCIVC,EAAc,WACzB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXoB,GAAWK,EAAAA,EAAAA,IAAYP,GACvBQ,GAAcD,EAAAA,EAAAA,IAAYH,GAE1BK,EAAmBP,EAASG,QAAO,SAAAjB,GAAO,OAC9CA,EAAQC,KAAKqB,cAAcC,SAASH,EAAYE,cADF,IAIhD,OACE,eAAI3B,UAAWC,EAAf,SACGyB,EAAiBG,KAAI,YAA2B,IAAxBvB,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQqB,EAAS,EAATA,GACrC,OACE,0BACGxB,EADH,IACUG,GACR,mBAAQsB,QAAS,kBAAMjC,GAASkC,EAAAA,EAAAA,IAAcF,GAA7B,EAAjB,sBAFOA,EAKZ,KAGN,E,UCzBD,EAAwB,sBCoBxB,EAjBe,WACb,IAAMhC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,kBACEC,UAAWC,EACXgC,SAPiB,SAAA9B,GACrBL,GAASoC,EAAAA,EAAAA,GAAS/B,EAAEgC,OAAO3B,OAC5B,EAMKK,KAAK,OACLP,KAAK,YAIZ,ECXc,SAAS8B,IACtB,IAAMtC,GAAWC,EAAAA,EAAAA,MAQjB,OANAsC,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAKF,iCACE,SAACyC,EAAA,EAAD,WACE,2CAEF,SAAC1C,EAAD,KACA,SAAC,EAAD,KACA,SAAC0B,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"input\":\"ContactsForm_input__UjXFK\",\"button\":\"ContactsForm_button__zuUB3\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactsForm.module.css';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: e.currentTarget.name.value,\n      number: e.currentTarget.number.value,\n    };\n\n    if (contact !== '') {\n      dispatch(addContact(contact));\n      e.currentTarget.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.contacts.filter;\n\nexport const selectAllcontacts = state => state.contacts.items;\n\nexport const selectFilterState = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"wrapper\":\"ContactList_wrapper__VP-XU\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectAllcontacts, selectFilterState } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllcontacts);\n  const filterValue = useSelector(selectFilterState);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <li key={id}>\n            {name} {number}\n            <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    dispatch(onFilter(e.target.value));\n  };\n  return (\n    <>\n      <input\n        className={css.input}\n        onChange={onChangeFilter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactsForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactsForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","contact","name","currentTarget","value","number","addContact","reset","alert","type","pattern","title","required","selectAllcontacts","state","contacts","items","selectFilterState","filter","ContactList","useSelector","filterValue","filteredContacts","toLowerCase","includes","map","id","onClick","deleteContact","onChange","onFilter","target","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}